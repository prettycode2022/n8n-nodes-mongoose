name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.6.2
        
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run linter
      run: pnpm run lint
      
    - name: Run tests
      run: pnpm test
      
    - name: Run build
      run: pnpm run build
      
    - name: Upload coverage to Codecov
      if: matrix.node-version == '18.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  build-and-validate:
    name: Build & Validate Package
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.6.2
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build package
      run: pnpm run build
      
    - name: Validate n8n nodes
      run: |
        if [ -f "dist/nodes/MongoDbMongoose/MongoDbMongoose.node.js" ]; then
          echo "‚úÖ MongoDbMongoose node built successfully"
        else
          echo "‚ùå MongoDbMongoose node build failed"
          exit 1
        fi
        
        if [ -f "dist/nodes/MongoDbChangeStream/MongoDbChangeStream.node.js" ]; then
          echo "‚úÖ MongoDbChangeStream node built successfully"
        else
          echo "‚ùå MongoDbChangeStream node build failed"
          exit 1
        fi
        
    - name: Check package size
      run: |
        echo "Creating package tarball to check size..."
        TARBALL=$(pnpm pack)
        if [ -f "$TARBALL" ]; then
          echo "‚úÖ Package created: $TARBALL"
          echo "üì¶ Package size: $(ls -lh $TARBALL | awk '{print $5}')"
          echo "üìÅ Package contents (first 20 files):"
          tar -tzf "$TARBALL" | head -20
          echo "üìä Total files in package: $(tar -tzf $TARBALL | wc -l)"
          echo "üóëÔ∏è Cleaning up tarball..."
          rm -f "$TARBALL"
        else
          echo "‚ùå Failed to create package"
          exit 1
        fi
        
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.6.2
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run pnpm audit
      run: pnpm audit --audit-level moderate
      continue-on-error: true
      
    - name: Check for vulnerabilities
      run: pnpm audit --audit-level high
